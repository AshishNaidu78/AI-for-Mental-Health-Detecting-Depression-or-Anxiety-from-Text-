name: Flask App Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the code
    - name: Checkout Repository
      uses: actions/checkout@v2

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Run tests (if any)
    - name: Run Tests
      run: |
        pytest  # Replace with your test command if you have tests

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    # Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v2

    # Set up Python environment again for deployment
    - name: Set up Python for Deployment
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    # Install dependencies again
    - name: Install dependencies for Deployment
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Deploy to your chosen service (e.g., Heroku, AWS, etc.)
    # Here's an example for deploying to Heroku:
    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        git remote add heroku https://git.heroku.com/your-heroku-app.git
        git push heroku main

    # Optionally, deploy to other platforms (AWS, Docker, etc.)
    # For example, if you are using Docker, you would build and push the Docker image here.
    # You can replace the Heroku deployment step with Docker commands if needed.
